variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "" 
  POSTGRES_ENABLED: "false"
  TEST_DISABLED: "true" 

include:
- template: Auto-DevOps.gitlab-ci.yml

# build development
build:
  variables:
    KUBE_NAMESPACE: dhcr-dev
    HELM_UPGRADE_EXTRA_ARGS: '--set ingress.tls.enabled=false --set service.externalPort=80 --set service.internalPort=80 --set service.url=dev-dhcr.clarin-dariah.eu'
  image: docker/compose:latest
  stage: build
  services:
    - name: docker:dind
      command: ["--mtu=1450"]
  tags:
    - cluster
  before_script:
    - sh -c 'cat .${CI_COMMIT_REF_SLUG}.env >> Dockerfile'

  script:
    - export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
    - export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG .
    - docker push $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master-dev"'



# build production
build:
  variables:
    KUBE_NAMESPACE: dhcr-prod
    HELM_UPGRADE_EXTRA_ARGS: '--set ingress.tls.enabled=false --set service.externalPort=80 --set service.internalPort=80 --set service.url=dhcr.clarin-dariah.eu'
  image: docker/compose:latest
  stage: build
  services:
    - name: docker:dind
      command: ["--mtu=1450"]
  tags:
    - cluster
  
  before_script:
    - sh -c 'cat .${CI_COMMIT_REF_SLUG}.env >> Dockerfile'
  
  script:
    - export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
    - export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG .
    - docker push $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
