

/* basic styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


body {
    font-family: metropolis, Sans-Serif;
    font-size: 18px;
    line-height: 1.44;
    font-weight: normal;
    letter-spacing: -0.17px;
    color: $text-color;
}



h1 {
    font-size: 40px;
    font-weight: bold;
    line-height: 1.5;
    color: $blue;
    @include respond-to(handhelds) {
        font-size: 24px;
        line-height: normal;
    }
}
h2 {
    font-family: bebas;
    font-size: 30px;
    font-weight: normal;
    line-height: 0.8;
    color: $blue;
}
h3 {
    font-size: 20px;
    font-weight: bold;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
    color: $blue;
}
h1,h2,h3,h4 {
    &:first-child {
        margin-top: 0;
    }
}

p {
    margin-bottom: 1.2em;
    text-align: left;
    line-height: $line-height;
}

ul, ol {
    margin-bottom: 0.6em;
    margin-left: 1em;
    li {
        line-height: $line-height;
        margin-bottom: 0.3em;
    }
}
dl {
    dt,dd {
        font-size: 16px;
        font-family: metropolis, sans-serif;
        font-weight: bold;
        color: $blue;
        display: block;
    }
    dd {
        font-weight: normal;
    }
}

img {
    outline: none;
}

em {
    font-size: 0.9em;
    font-weight: bold;
    letter-spacing: 0.08em;
    font-style: normal;
    white-space: nowrap;
}

a {
    color: $blue;
    text-decoration: none;
    &:hover {
        text-decoration: underline;
    }
}

button, .button {
    height: 46px;
    outline: none;
    display: inline-block;
    position: relative;
    border-radius: 24px;
    border: solid 2px $blue;
    background-color: #fff;
    font-family: bebas;
    font-size: 24px;
    font-weight: normal;
    font-style: normal;
    font-stretch: normal;
    line-height: normal;
    letter-spacing: normal;
    text-align: center;
    text-decoration: none;
    color: $blue;
    text-transform: uppercase;
    padding: 2px 20px 0;
    cursor: pointer;
    transition: all 0.3s;
    &:hover, &.animate, &.focus {
        transform: scale(1.1);
        text-decoration: none;
    }
    &.back::before, &.continue::after {
        width: 10px;
        height: 10px;
        display: inline-block;
        position: relative;
        left: 0;
        bottom: 2px;
        transform: rotate(135deg);
        border: 3px solid $blue;
        border-top: none;
        border-left: none;
        content: '';
        margin-right: 5px;
    }
    &.blue {
        background-color: $blue;
        color: #fff;
        &.back::before, &.continue::after {
            border: 3px solid #fff;
            border-top: none;
            border-left: none;
        }
    }

    &.continue::after {
        transform: rotate(-45deg);
        margin-right: 0;
        margin-left: 5px;
    }
}
.button {
    padding-top: 7px;
}

hr {
    height: 2px;
    background-color: $blue;
    border: none;
    margin: 0;
}




.right  { text-align: right;  }
.center { text-align: center; }
.clearfix {
    @include clearfix;
}


.recurring {
    background: url("../img/repeat.png") left bottom/contain no-repeat;
    padding-left: 1.4em;
    padding-bottom: 0.2em;
    line-height: 0.85em;
    font-size: inherit;
    display: inline-block;
}
table {
    .recurring {
        color: transparent;
        height: 15px;
        width: 15px;
        //overflow: hidden;
        display: inline-block;
        background: url("../img/repeat.png") center/contain no-repeat;
        vertical-align: middle;
    }
}


.flex-columns {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    justify-content: space-around;
    .flex-item {
        // define a minimum column width
        flex: 0 1 45%;  // assume 2 columns
        min-width: 300px;
        padding: 0 $whitespace;
        &.wide {
            flex: 0 1 60%;  // assume 2 columns
        }
        &.narrow {
            flex: 0 1 30%;  // assume 2 columns
        }
    }
    .flex-item.triple {
        flex: 0 1 30%;
        min-width: 200px;
    }
    @include respond-to(handhelds) {
        display: block;
        .flex-item {
            margin-bottom: 3em;
            min-width: initial;
            padding: 0;
        }
    }
}


// only used in /courses/view so far
$grid-break: 980px;
.grid-container {
    display: grid;
    grid-column-gap: 4%;
    grid-auto-flow: row;
    grid-template-columns: repeat(auto-fit, [col-start] minmax(250px, 48%) [col-end]);
    @media only screen and (max-width: $grid-break) {
        grid-template-columns: [col-start] 100% [col-end];
    }
    .item {
        display: grid;
        grid-column-gap: 5%;
        grid-template-columns: [col-start] minmax(95px, 4fr) [col-middle] 6.5fr [col-end];
        .term {
            overflow: hidden;
        }
        .data {
            grid-column-end: span 1;
            overflow: hidden;
        }
        // default span is one, but not for single-colums: span from first to last line
        &.single-col {
            grid-column: col-start 1 / col-end -1;
            grid-column-gap: 2%;
            // account for the gap
            grid-template-columns: repeat(2, [col-start] minmax(95px, 4fr) [col-middle] 6.6fr [col-end]);
            @media only screen and (max-width: $grid-break) {
                grid-template-columns: [col-start] minmax(95px, 4fr) [col-middle] 6.5fr [col-end];
                grid-column-gap: 5%;
            }
            // data spans all columns except for the first
            .data {
                grid-column: col-middle 1 / col-end -1;
            }
        }
    }
}

